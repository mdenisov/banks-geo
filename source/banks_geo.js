// Generated by CoffeeScript 1.6.3
/*
@author: Maxim Denisov (denisovmax1988@yandex.ru)
@date: 19/10/2013
@version: 0.1
@copyright: Banki.ru (www.banki.ru)
*/

var BanksGeo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BanksGeo = (function() {
  function BanksGeo(container, options) {
    this.init = __bind(this.init, this);
    this._messages = {
      empty_map: 'Error: Empty map',
      empty_center: 'Error: Empty center',
      empty_zoom: 'Error: Empty zoom'
    };
    this.useCluster = true;
    if (container == null) {
      return this.log(this._messages.empty_map);
    }
    if (options.center == null) {
      return this.log(this._messages.empty_center);
    }
    if (options.zoom == null) {
      return this.log(this._messages.empty_zoom);
    }
    if (options.useCluster != null) {
      this.useCluster = options.useCluster === true ? true : false;
    }
    if (container) {
      this.container = '#' + container;
      this.$container = $(this.container);
      this.center = options.center;
      this.zoom = options.zoom;
    }
    if (options.data != null) {
      if (typeof options.data === 'function') {
        this.log('1');
      }
      if (typeof options.data === 'object') {
        this.data = options.data;
      }
    }
    ymaps.ready(this.init);
  }

  BanksGeo.prototype.init = function() {
    this.log('Initialize');
    this.map = new ymaps.Map(this.$container[0], {
      center: this.center,
      zoom: this.zoom
    });
    this.map.controls.add('zoomControl', {
      left: 5,
      top: 5
    });
    this.buildGeoCollection();
    return this.processData();
  };

  BanksGeo.prototype.buildGeoCollection = function() {
    if (this.useCluster === true) {
      return this.collection = new ymaps.Clusterer({
        preset: 'twirl#blackClusterIcons'
      });
    } else {
      return this.collection = new ymaps.GeoObjectCollection();
    }
  };

  BanksGeo.prototype.processData = function() {
    var point, _i, _len, _ref;
    if (this.data.length > 1) {
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        point = _ref[_i];
        this.appendToCollection(this.buildGeoObject(point));
      }
    }
    return this.addToMap(this.collection);
  };

  BanksGeo.prototype.buildGeoObject = function(object) {
    return new ymaps.Placemark(object.coordinates, {});
  };

  BanksGeo.prototype.appendToCollection = function(object) {
    return this.collection.add(object);
  };

  BanksGeo.prototype.addToMap = function(object) {
    return this.map.geoObjects.add(object);
  };

  BanksGeo.prototype.log = function(message) {
    return console.log(message);
  };

  return BanksGeo;

})();
